plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id("org.jetbrains.kotlin.plugin.parcelize")
}

android {
    namespace 'com.cloudx.demoappjava'
    compileSdk 35

    defaultConfig {
        applicationId "com.cloudx.demoappjava"
        minSdk 21
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation("com.cloudx:cloudx-sdk:v0.0.1.19")
    implementation("com.cloudx.adapter:adapter-cloudx:v0.0.1.10")
    implementation("com.cloudx.adapter:adapter-meta:v0.0.1.10")
    implementation("com.cloudx.adapter:adapter-google:v0.0.1.10")
    implementation("com.cloudx.adapter:adapter-mintegral:v0.0.1.10")
    implementation("com.cloudx.adapter:adapter-testbidder:v0.0.1.24")

    implementation libs.recyclerview
    implementation libs.datastore
    implementation libs.preferences
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    implementation libs.lifecycle.runtime
    implementation libs.lifecycle.viewmodel
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.gson

    implementation libs.kotlinx.coroutines.android

    implementation libs.core.ktx
    implementation libs.fragment.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.androidx.core.ktx
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}